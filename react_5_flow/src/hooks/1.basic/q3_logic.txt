
  /* 
    문제3
    useEffect useState에 관련한 문제입니다
    단체 줄넘기 대회에 출전하였습니다

    줄넘기 시작 버튼을 누르면 
    Q3components 컴포넌트가 보입니다.

    Q3components 내부에는

    해당 컴포넌트가 보이기 시작한 시점부터
    2초마다 줄넘기 횟수가 1회 씩 증가하는 비즈니스 
    로직이 존재합니다

    또한, 이러한 줄넘기 횟수 증가는 q3.js(index)에서도
    확인할 수 있도록
    <p> 줄넘기 횟수 : 0 </p> 에 횟수로 표시됩니다

    줄넘기 중지 버튼을 누르면
    해당 컴포넌트는 보이지 않아야하며, 
    줄넘기 횟수도 더이상 증가해서는 안됩니다.
    또한, 줄넘기 횟수는 0으로 고정되어야합니다.
  */

 
useEffect , useState 

줄넘기 시작 버튼을 누르면 
q3 컴포넌트가 보인다. 

q3 컴포넌트 내부에는 
해당 컴포넌트가 보이기 시작한 시점부터 
2초마다 줄넘기 횟수가 1회씩 증가하는
비즈니스 로직이 존재

컴포넌트 구동 방식 

1. 줄넘기 시작(state)을 누르면 (외부)q3 컴포넌트가 보이고, 

2. 컴포넌트가 보이는 시점부터 
   p태그 줄넘기 횟수가 1회씩 증가 > 2초마다 

3. 줄넘기 중지 버튼을 누르면 
   해당 컴포넌트는 안보이게 (state) 
   줄넘기 횟수도 증가 하면 안됨 멈춰야 함 
   줄넘기 횟수는 다시 0으로 고정?..?

---------------------------------

* 1번의 로직 
줄넘기 시작 버튼을 하나의 상태 변수로 지정 
const [state, setState] = useState(false);

줄넘기 시작 버튼을 클릭할 때 상태변수 변경 
const getStart = () => {
    setState(ture);
}
<button onClick = {getStart}></button>

줄넘기 중지 버튼을 클릭하면 상태변수 변경 
const getStop = () => {
    setState(false);
}

q3 컴포넌트는 state의 true, false에 따라
보이거나 안보이게 설정 
{state && <Q3components/>}

* 2번의 로직 


타이머 컴포넌트를 따로 만들기 

const [num, setNum] = useState(0);

useEffect(() => {
    const timer = setInterval(() => {
        console.log("타이머 작동")
        setNum(num + 1);
    }, 2000);
    return () => {
        clearInterval(timer)
        console.log("깨끗하게");
    }
},[state]);

<p>줄넘기 횟수 : {num}</p>





















