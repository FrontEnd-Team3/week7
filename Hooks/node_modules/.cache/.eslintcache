[{"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/index.js":"1","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/reportWebVitals.js":"2","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/App.js":"3","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/pages/State.js":"4","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/pages/Hooks.js":"5","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/pages/Detail.js":"6","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/2.state/state2.js":"7","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/1.basic/q1.js":"8","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/2.state/state1.js":"9","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/1.basic/q2.js":"10","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/2.state/state3.js":"11","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/1.basic/q3.js":"12","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/components/2.state/product.js":"13","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/components/1.basic/q3components.js":"14","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/components/2.state/comment.js":"15"},{"size":535,"mtime":1676150996000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1676150996000,"results":"18","hashOfConfig":"17"},{"size":654,"mtime":1684243219318,"results":"19","hashOfConfig":"17"},{"size":545,"mtime":1676438929000,"results":"20","hashOfConfig":"17"},{"size":644,"mtime":1676438834000,"results":"21","hashOfConfig":"17"},{"size":2842,"mtime":1684246173081,"results":"22","hashOfConfig":"17"},{"size":4269,"mtime":1684151522590,"results":"23","hashOfConfig":"17"},{"size":2432,"mtime":1684064798463,"results":"24","hashOfConfig":"17"},{"size":2220,"mtime":1684162593519,"results":"25","hashOfConfig":"17"},{"size":2892,"mtime":1684068000621,"results":"26","hashOfConfig":"17"},{"size":2445,"mtime":1684246244454,"results":"27","hashOfConfig":"17"},{"size":1901,"mtime":1684071112632,"results":"28","hashOfConfig":"17"},{"size":1155,"mtime":1684244860092,"results":"29","hashOfConfig":"17"},{"size":116,"mtime":1676437919000,"results":"30","hashOfConfig":"17"},{"size":3014,"mtime":1684156035734,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1hze1qj",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"35"},"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/index.js",[],[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/reportWebVitals.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/App.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/pages/State.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/pages/Hooks.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/pages/Detail.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/2.state/state2.js",["82"],[],"import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Comment from \"../../components/2.state/comment\";\n\nfunction State2() {\n  /*  \n    문제 2.\n\n    Q1. 아래 작성된 state의 mock data를 활용하여\n        댓글 목록을 화면에 랜더링 해보세요 :)\n        Components는 src/components/state/comment.js를 활용하세요\n        \n    Q2. 댓글 작성 수정 삭제 기능을 구현해보세요 :)\n            1. 댓글 작성 기능\n            2. 댓글 수정 기능\n            3. 댓글 삭제 기능 ( 본인이 작성한 댓글만 삭제할 수 있습니다, myComment 활용 )\n    */\n\n  const [post, setPost] = useState({\n    title: \"안녕하세요 여러분 김성용 강사입니다 :)\",\n    content: \"오늘도 모두 화이팅입니다!\",\n    User: {\n      nickname: \"김성용\",\n      age: 20,\n      height: 190,\n    },\n    Comments: [\n      {\n        User: {\n          nickname: \"김사과\",\n        },\n        content: \"오늘도 화이팅입니다!\",\n        myComment: false,\n      },\n      {\n        User: {\n          nickname: \"반하나\",\n        },\n        content: \"오늘도 화이팅입니다!\",\n        myComment: false,\n      },\n      {\n        User: {\n          nickname: \"오렌지\",\n        },\n        content: \"오늘도 화이팅입니다!\",\n        myComment: false,\n      },\n      {\n        User: {\n          nickname: \"이멜론\",\n        },\n        content: \"오늘도 화이팅입니다!\",\n        myComment: false,\n      },\n      {\n        User: {\n          nickname: \"박수박\",\n        },\n        content: \"오늘도 화이팅입니다!\",\n        myComment: false,\n      },\n    ],\n  });\n\n  const [userInput, setUserInput] = useState(\"\");\n  const [commentInput, setCommentInput] = useState(\"\");\n\n  const onChange = (event) => {\n    if (event.target.name === \"user\") {\n      setUserInput(event.target.value);\n      console.log(userInput);\n    }\n    if (event.target.name === \"comment\") {\n      setCommentInput(event.target.value);\n      console.log(commentInput);\n    }\n  };\n\n  const handleComment = () => {\n    const updatePost = {\n      ...post,\n      Comments: [\n        ...post.Comments,\n        {\n          User: {\n            nickname: userInput,\n          },\n          content: commentInput,\n          myComment: true,\n        },\n      ],\n    };\n    setPost(updatePost);\n  };\n\n  // const onClick = () => {\n  //   if (userInput && commentInput) {\n  //     console.log(\"clicked!\");\n  //   } else {\n  //     console.log(\"nope!\");\n  //   }\n  // };\n\n  return (\n    <S.Wrapper>\n      <h1>문제2</h1>\n      <S.PostBox>\n        <S.PostTitle>제목: {post.title}</S.PostTitle>\n        <S.PostContent>내용: {post.content}</S.PostContent>\n      </S.PostBox>\n      <S.PostInfo>\n        <p>\n          작성자: <span>{post.User.nickname}</span>\n        </p>\n        <p>\n          작성자 나이: <span>{post.User.age}</span>\n        </p>\n        <p>\n          작성자 키: <span>{post.User.height}</span>\n        </p>\n      </S.PostInfo>\n      <div>\n        <p>\n          댓글 수: <span>{post.Comments.length}</span>\n        </p>\n        <input name=\"user\" placeholder=\"작성자\" onChange={onChange} />\n        <input name=\"comment\" placeholder=\"댓글 내용\" onChange={onChange} />\n        <button onClick={handleComment}>댓글 작성</button>\n      </div>\n      <S.CommentList>\n        {/* list */}\n        {/* 예시 데이터 */}\n        <Comment post={post} setPost={setPost} />\n      </S.CommentList>\n    </S.Wrapper>\n  );\n}\nexport default State2;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PostBox = styled.div`\n  background-color: #999;\n  width: 360px;\n  padding: 10px;\n`;\n\nconst PostTitle = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst PostContent = styled.p`\n  color: #fff;\n`;\n\nconst PostInfo = styled.div`\n  width: 360px;\n  border: 3px solid #f00;\n  padding: 10px;\n  margin: 10px;\n\n  p {\n    display: flex;\n    justify-content: space-around;\n  }\n\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst CommentList = styled.ul`\n  width: 960px;\n  list-style: none;\n`;\n\nconst S = {\n  Wrapper,\n  PostBox,\n  PostTitle,\n  PostContent,\n  PostInfo,\n  CommentList,\n};\n","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/1.basic/q1.js",["83"],[],"import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Q1() {\r\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n\r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n\r\n  const [input1Value, setInput1Value] = useState(\"\");\r\n  const [alertMessage, setAlertMessage] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const copy = e.target.value;\r\n    setInput1Value(copy);\r\n    if (copy === e.target.placeholder) {\r\n      console.log(\"true\");\r\n      setAlertMessage(true);\r\n    } else {\r\n      setAlertMessage(false);\r\n    }\r\n  };\r\n\r\n  const [btnText, setBtnText] = useState(\"숨기기\");\r\n  const [btnState, setBtnState] = useState(false);\r\n\r\n  function hiddenBtn() {\r\n    setBtnState(!btnState);\r\n    btnState ? setBtnText(\"보이기\") : setBtnText(\"숨기기\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      <div>\r\n        <h2>문제1-1.</h2>\r\n        <input\r\n          onChange={handleChange}\r\n          value={input1Value}\r\n          type=\"text\"\r\n          placeholder={\"김성용\"}\r\n          style={{ textAlign: \"center\" }}\r\n        />\r\n        <S.Message alertMessage={alertMessage}>\r\n          {alertMessage\r\n            ? \"올바르게 입력하셨습니다\"\r\n            : \"올바르게 글을 작성해주세요\"}\r\n        </S.Message>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>문제1-2. </h2>\r\n        <button onClick={hiddenBtn}>{btnText}</button>\r\n        <p>{btnState ? \"이 문구는 보이기 상태일 때만 볼 수 있습니다\" : \"\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Q1;\r\n\r\nconst Message = styled.p`\r\n  color: ${({ alertMessage }) => (alertMessage ? \"green\" : \"red\")};\r\n`;\r\n\r\nconst S = {\r\n  Message,\r\n};\r\n","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/2.state/state1.js",["84"],[],"import PlayListMock from \"../../__mock__/playList.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nfunction State1() {\r\n  /* \r\n    문제 1.\r\n\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n\r\n  // console.log(PlayListMock.playlist);\r\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\r\n\r\n  const [playlist, setPlaylist] = useState(PlayListMock.playlist);\r\n  const [listInput1, setListInput1] = useState(\"\");\r\n  const [listInput2, setListInput2] = useState(\"\");\r\n  const onChange = (e) => {\r\n    if (e.target.name === \"titleInput\") {\r\n      setListInput1(e.target.value);\r\n      console.log(listInput1);\r\n    }\r\n    if (e.target.name === \"singerInput\") {\r\n      setListInput2(e.target.value);\r\n      console.log(listInput2);\r\n    }\r\n  };\r\n\r\n  const onClick = () => {\r\n    const newSong = {\r\n      title: listInput1,\r\n      signer: listInput2,\r\n    };\r\n    setPlaylist([...playlist, newSong]);\r\n  };\r\n\r\n  const onDelete = (i) => {\r\n    const updatedPlaylist = [...playlist];\r\n    updatedPlaylist.splice(i, 1);\r\n    setPlaylist(updatedPlaylist);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      {playlist.map((a, i) => {\r\n        return (\r\n          <div key={i}>\r\n            <ul>\r\n              {/* list */}\r\n              {/* 예시 데이터입니다 */}\r\n              <li>\r\n                <h3>{a.title}</h3>\r\n                <p>{a.signer}</p>\r\n              </li>\r\n            </ul>\r\n            <button\r\n              onClick={() => {\r\n                onDelete(i);\r\n              }}\r\n            >\r\n              삭제\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n      <div>\r\n        <p>\r\n          곡명 : <input name=\"titleInput\" onChange={onChange} />\r\n        </p>\r\n        <p>\r\n          가수/작곡 : <input name=\"singerInput\" onChange={onChange} />\r\n        </p>\r\n        <p>\r\n          <button onClick={onClick}>추가</button>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default State1;\r\n","/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/1.basic/q2.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/2.state/state3.js",["85","86","87"],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/1.basic/q3.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/components/2.state/product.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/components/1.basic/q3components.js",[],[],"/Users/zivivle/Desktop/REJS/3주차/Hooks/src/components/2.state/comment.js",["88","89"],[],"import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction Comment({ post, setPost }) {\n  const [btnState, setBtnState] = useState(true);\n  const [handleInput, setHandleInput] = useState(\"\");\n  const [delBtnState, setDelBtnState] = useState(true);\n  const [delBtnState2, setDelBtnState2] = useState(true);\n\n  const handelBtn = (e) => {\n    if (e.target.name === \"btn1\") {\n      console.log(btnState);\n      setBtnState(false);\n    }\n    if (e.target.name === \"btn2\") {\n      console.log(btnState);\n      setBtnState(false);\n    }\n  };\n  const delBtn = () => {\n    setDelBtnState(false);\n    console.log(delBtnState);\n  };\n\n  const onChangeInput = (e) => {\n    setHandleInput(e.target.value);\n    console.log(handleInput);\n  };\n\n  const handleComment2 = (index) => {\n    setBtnState(true);\n    const updatedComments = [...post.Comments];\n    updatedComments[index].content = handleInput;\n\n    const updatePost2 = {\n      ...post,\n      Comments: updatedComments,\n    };\n    setPost(updatePost2);\n  };\n\n  const renderComment = (a) => {\n    if (!delBtnState) {\n      return null;\n    } else {\n      return (\n        <div>\n          <p>\n            작성자: <span>{a.User.nickname}</span>\n          </p>\n          <p>\n            댓글 내용: <span>{a.content}</span>\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {post.Comments.map(function (a, i) {\n        return (\n          <S.CommentItem key={i}>\n            {a.myComment ? (\n              renderComment(a)\n            ) : (\n              <div>\n                <p>\n                  작성자: <span>{a.User.nickname}</span>\n                </p>\n                <p>\n                  댓글 내용: <span>{a.content}</span>\n                </p>\n              </div>\n            )}\n\n            {delBtnState ? (\n              <div>\n                {a.myComment ? (\n                  btnState ? (\n                    <button onClick={handelBtn} name=\"btn1\">\n                      수정\n                    </button>\n                  ) : null\n                ) : null}\n                {a.myComment ? (\n                  btnState ? (\n                    <button onClick={delBtn} name=\"btn2\">\n                      삭제\n                    </button>\n                  ) : null\n                ) : null}\n                {a.myComment ? (\n                  !btnState ? (\n                    <div>\n                      <input onChange={onChangeInput} />\n                      <button\n                        onClick={() => {\n                          handleComment2(i);\n                        }}\n                      >\n                        완료\n                      </button>\n                    </div>\n                  ) : null\n                ) : null}\n              </div>\n            ) : null}\n          </S.CommentItem>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Comment;\n\nconst CommentItem = styled.li`\n  border: 1px solid #000;\n  margin: 10px;\n`;\n\nconst S = {\n  CommentItem,\n};\n",{"ruleId":"90","severity":1,"message":"91","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":19},{"ruleId":"90","severity":1,"message":"94","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":19},{"ruleId":"90","severity":1,"message":"95","line":50,"column":19,"nodeType":"92","messageId":"93","endLine":50,"endColumn":29},{"ruleId":"90","severity":1,"message":"96","line":76,"column":7,"nodeType":"92","messageId":"93","endLine":76,"endColumn":8},{"ruleId":"90","severity":1,"message":"97","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":22},{"ruleId":"90","severity":1,"message":"98","line":8,"column":24,"nodeType":"92","messageId":"93","endLine":8,"endColumn":39},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'setProduct' is assigned a value but never used.","'S' is assigned a value but never used.","'delBtnState2' is assigned a value but never used.","'setDelBtnState2' is assigned a value but never used."]