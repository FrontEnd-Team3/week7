{"ast":null,"code":"var _jsxFileName = \"/Users/zivivle/Desktop/REJS/3\\u110C\\u116E\\u110E\\u1161/Hooks/src/components/2.state/product.js\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProductCard(_ref) {\n  let {\n    onNavigate,\n    product\n  } = _ref;\n  const formatPrice = price => {\n    return new Intl.NumberFormat().format(price);\n    /*\n      Intl.NumberFormat()은 JavaScript에서 제공하는 내장 객체로, 숫자를 형식화하는 데 사용됩니다. 이 객체의 format() 메서드를 호출하여 숫자를 형식화하고, 그 결과로 형식화된 숫자를 포함하는 문자열을 반환합니다.\n      new Intl.NumberFormat([locales [, options]]).format(number)\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: product.map((a, i) => {\n      return /*#__PURE__*/_jsxDEV(S.Item, {\n        onClick: onNavigate,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: a.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC0C1\\uD488\\uBC88\\uD638: \", a.productNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uACA9: \", formatPrice(a.productPrice), \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC0AC\\uC774\\uC988: \", a.productSize]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD3C9\\uC810: \", a.productRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uB9AC\\uBDF0: \", a.productReview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n_c = ProductCard;\nexport default ProductCard;\nconst Item = styled.li`\n  border: 1px solid #000;\n  cursor: pointer;\n  width: 300px;\n  margin: 16px auto;\n`;\nconst S = {\n  Item\n};\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["styled","ProductCard","onNavigate","product","formatPrice","price","Intl","NumberFormat","format","map","a","i","productName","productNumber","productPrice","productSize","productRating","productReview","Item","li","S"],"sources":["/Users/zivivle/Desktop/REJS/3주차/Hooks/src/components/2.state/product.js"],"sourcesContent":["import styled from \"styled-components\";\n\nfunction ProductCard({ onNavigate, product }) {\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat().format(price);\n    /*\n      Intl.NumberFormat()은 JavaScript에서 제공하는 내장 객체로, 숫자를 형식화하는 데 사용됩니다. 이 객체의 format() 메서드를 호출하여 숫자를 형식화하고, 그 결과로 형식화된 숫자를 포함하는 문자열을 반환합니다.\n      new Intl.NumberFormat([locales [, options]]).format(number)\n    */\n  };\n  return (\n    <>\n      {product.map((a, i) => {\n        return (\n          <S.Item key={i} onClick={onNavigate}>\n            <h4>{a.productName}</h4>\n            <p>상품번호: {a.productNumber}</p>\n            <p>가격: {formatPrice(a.productPrice)}원</p>\n            <p>사이즈: {a.productSize}</p>\n            <p>평점: {a.productRating}</p>\n            <p>리뷰: {a.productReview}</p>\n          </S.Item>\n        );\n      })}\n    </>\n  );\n}\nexport default ProductCard;\n\nconst Item = styled.li`\n  border: 1px solid #000;\n  cursor: pointer;\n  width: 300px;\n  margin: 16px auto;\n`;\n\nconst S = {\n  Item,\n};\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,SAASC,WAAW,OAA0B;EAAA,IAAzB;IAAEC,UAAU;IAAEC;EAAQ,CAAC;EAC1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,OAAO,IAAIC,IAAI,CAACC,YAAY,EAAE,CAACC,MAAM,CAACH,KAAK,CAAC;IAC5C;AACJ;AACA;AACA;EACE,CAAC;;EACD,oBACE;IAAA,UACGF,OAAO,CAACM,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACrB,oBACE,QAAC,CAAC,CAAC,IAAI;QAAS,OAAO,EAAET,UAAW;QAAA,wBAClC;UAAA,UAAKQ,CAAC,CAACE;QAAW;UAAA;UAAA;UAAA;QAAA,QAAM,eACxB;UAAA,WAAG,4BAAM,EAACF,CAAC,CAACG,aAAa;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC9B;UAAA,WAAG,gBAAI,EAACT,WAAW,CAACM,CAAC,CAACI,YAAY,CAAC,EAAC,QAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI,eACzC;UAAA,WAAG,sBAAK,EAACJ,CAAC,CAACK,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC3B;UAAA,WAAG,gBAAI,EAACL,CAAC,CAACM,aAAa;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC5B;UAAA,WAAG,gBAAI,EAACN,CAAC,CAACO,aAAa;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GANjBN,CAAC;QAAA;QAAA;QAAA;MAAA,QAOL;IAEb,CAAC;EAAC,iBACD;AAEP;AAAC,KAxBQV,WAAW;AAyBpB,eAAeA,WAAW;AAE1B,MAAMiB,IAAI,GAAGlB,MAAM,CAACmB,EAAG;AACvB;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,CAAC,GAAG;EACRF;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}