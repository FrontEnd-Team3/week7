{"ast":null,"code":"var _jsxFileName = \"/Users/zivivle/Desktop/REJS/3\\u110C\\u116E\\u110E\\u1161/Hooks/src/hooks/2.state/state1.js\",\n  _s = $RefreshSig$();\nimport PlayListMock from \"../../__mock__/playList.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction State1() {\n  _s();\n  /* \r\n    문제 1.\r\n      state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n      아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\n\n  console.log(PlayListMock.playlist);\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\n\n  const [playlist, setPlaylist] = useState(PlayListMock.playlist);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: playlist.map((a, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uBB38\\uC81C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: playlist[1].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Joe Hisaishi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uACE1\\uBA85 : \", /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uC218/\\uC791\\uACE1 : \", /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(State1, \"XE92lG+DOqx3yBiTDwp/6+tLrTY=\");\n_c = State1;\nexport default State1;\nvar _c;\n$RefreshReg$(_c, \"State1\");","map":{"version":3,"names":["PlayListMock","axios","useState","State1","console","log","playlist","setPlaylist","map","a","i","title"],"sources":["/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/2.state/state1.js"],"sourcesContent":["import PlayListMock from \"../../__mock__/playList.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nfunction State1() {\r\n  /* \r\n    문제 1.\r\n\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n\r\n  console.log(PlayListMock.playlist);\r\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\r\n\r\n  const [playlist, setPlaylist] = useState(PlayListMock.playlist);\r\n\r\n  return (\r\n    <>\r\n      {playlist.map((a, i) => {\r\n        return (\r\n          <div key={i}>\r\n            <h1>문제1</h1>\r\n            <ul>\r\n              {/* list */}\r\n              {/* 예시 데이터입니다 */}\r\n              <li>\r\n                <h3>{playlist[1].title}</h3>\r\n                <p>Joe Hisaishi</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n        <div>\r\n          <p>\r\n            곡명 : <input />\r\n          </p>\r\n          <p>\r\n            가수/작곡 : <input />\r\n          </p>\r\n          <p>\r\n            <button>추가</button>\r\n          </p>\r\n        </div>;\r\n      })}\r\n    </>\r\n  );\r\n}\r\nexport default State1;\r\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,8BAA8B;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,SAASC,MAAM,GAAG;EAAA;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;;EAIEC,OAAO,CAACC,GAAG,CAACL,YAAY,CAACM,QAAQ,CAAC;EAClC;;EAEA,MAAM,CAACA,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAACF,YAAY,CAACM,QAAQ,CAAC;EAE/D,oBACE;IAAA,UACGA,QAAQ,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACtB,oBACE;QAAA,wBACE;UAAA,UAAI;QAAG;UAAA;UAAA;UAAA;QAAA,QAAK,eACZ;UAAA,uBAGE;YAAA,wBACE;cAAA,UAAKJ,QAAQ,CAAC,CAAC,CAAC,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eAC5B;cAAA,UAAG;YAAY;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA;QAChB;UAAA;UAAA;UAAA;QAAA,QACF;MAAA,GATGD,CAAC;QAAA;QAAA;QAAA;MAAA,QAUL;MAER;QAAA,wBACE;UAAA,WAAG,iBACI;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACZ,eACJ;UAAA,WAAG,8BACO;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACf,eACJ;UAAA,uBACE;YAAA,UAAQ;UAAE;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QACjB;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IACR,CAAC;EAAC,iBACD;AAEP;AAAC,GA9CQP,MAAM;AAAA,KAANA,MAAM;AA+Cf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}