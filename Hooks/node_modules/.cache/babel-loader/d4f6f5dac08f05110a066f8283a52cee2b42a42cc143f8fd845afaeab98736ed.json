{"ast":null,"code":"var _jsxFileName = \"/Users/zivivle/Desktop/REJS/3\\u110C\\u116E\\u110E\\u1161/Hooks/src/hooks/1.basic/q1.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q1() {\n  _s();\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n      1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n          만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n      1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n          button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n          반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n    */\n\n  const [input1Value, setInput1Value] = useState(\"숨기기\");\n  const [alertMessage, setAlertMessage] = useState(false);\n  const handleChange = e => {\n    const copy = e.target.value;\n    setInput1Value(copy);\n    if (copy === e.target.placeholder) {\n      console.log(\"true\");\n      setAlertMessage(true);\n    } else {\n      setAlertMessage(false);\n    }\n  };\n  const [btnText, setBtnText] = useState(\"숨기기\");\n  const [btnState, setBtnState] = useState(false);\n  function hiddenBtn() {\n    setBtnState(!btnState);\n    btnState ? setBtnText(\"보이기\") : setBtnText(\"숨기기\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: input1Value,\n        type: \"text\",\n        placeholder: \"김성용\",\n        style: {\n          textAlign: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Message, {\n        alertMessage: alertMessage,\n        children: alertMessage ? \"올바르게 입력하셨습니다\" : \"올바르게 글을 작성해주세요\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-2. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hiddenBtn,\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\uC774 \\uBB38\\uAD6C\\uB294 \\uBCF4\\uC774\\uAE30 \\uC0C1\\uD0DC\\uC77C \\uB54C\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Q1, \"mt/RHtL8APAvG++tdGy3VniRwwU=\");\n_c = Q1;\nexport default Q1;\nconst Message = styled.p`\n  color: ${_ref => {\n  let {\n    alertMessage\n  } = _ref;\n  return alertMessage ? \"green\" : \"red\";\n}};\n`;\nconst S = {\n  Message\n};\nvar _c;\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"names":["useEffect","useState","styled","Q1","input1Value","setInput1Value","alertMessage","setAlertMessage","handleChange","e","copy","target","value","placeholder","console","log","btnText","setBtnText","btnState","setBtnState","hiddenBtn","textAlign","Message","p","S"],"sources":["/Users/zivivle/Desktop/REJS/3주차/Hooks/src/hooks/1.basic/q1.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Q1() {\r\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n\r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n\r\n  const [input1Value, setInput1Value] = useState(\"숨기기\");\r\n  const [alertMessage, setAlertMessage] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const copy = e.target.value;\r\n    setInput1Value(copy);\r\n    if (copy === e.target.placeholder) {\r\n      console.log(\"true\");\r\n      setAlertMessage(true);\r\n    } else {\r\n      setAlertMessage(false);\r\n    }\r\n  };\r\n\r\n  const [btnText, setBtnText] = useState(\"숨기기\");\r\n  const [btnState, setBtnState] = useState(false);\r\n\r\n  function hiddenBtn() {\r\n    setBtnState(!btnState);\r\n    btnState ? setBtnText(\"보이기\") : setBtnText(\"숨기기\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      <div>\r\n        <h2>문제1-1.</h2>\r\n        <input\r\n          onChange={handleChange}\r\n          value={input1Value}\r\n          type=\"text\"\r\n          placeholder={\"김성용\"}\r\n          style={{ textAlign: \"center\" }}\r\n        />\r\n        <S.Message alertMessage={alertMessage}>\r\n          {alertMessage\r\n            ? \"올바르게 입력하셨습니다\"\r\n            : \"올바르게 글을 작성해주세요\"}\r\n        </S.Message>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>문제1-2. </h2>\r\n        <button onClick={hiddenBtn}>{btnText}</button>\r\n        <p> 이 문구는 보이기 상태일 때만 볼 수 있습니다 </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Q1;\r\n\r\nconst Message = styled.p`\r\n  color: ${({ alertMessage }) => (alertMessage ? \"green\" : \"red\")};\r\n`;\r\n\r\nconst S = {\r\n  Message,\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,SAASC,EAAE,GAAG;EAAA;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAQE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BP,cAAc,CAACK,IAAI,CAAC;IACpB,IAAIA,IAAI,KAAKD,CAAC,CAACE,MAAM,CAACE,WAAW,EAAE;MACjCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBR,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAASmB,SAAS,GAAG;IACnBD,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtBA,QAAQ,GAAGD,UAAU,CAAC,KAAK,CAAC,GAAGA,UAAU,CAAC,KAAK,CAAC;EAClD;EAEA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,wBACE;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eACf;QACE,QAAQ,EAAET,YAAa;QACvB,KAAK,EAAEJ,WAAY;QACnB,IAAI,EAAC,MAAM;QACX,WAAW,EAAE,KAAM;QACnB,KAAK,EAAE;UAAEiB,SAAS,EAAE;QAAS;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/B,eACF,QAAC,CAAC,CAAC,OAAO;QAAC,YAAY,EAAEf,YAAa;QAAA,UACnCA,YAAY,GACT,cAAc,GACd;MAAgB;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eAEN;MAAA,wBACE;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eAChB;QAAQ,OAAO,EAAEc,SAAU;QAAA,UAAEJ;MAAO;QAAA;QAAA;QAAA;MAAA,QAAU,eAC9C;QAAA,UAAG;MAA2B;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA,gBACL;AAEP;AAAC,GAxEQb,EAAE;AAAA,KAAFA,EAAE;AAyEX,eAAeA,EAAE;AAEjB,MAAMmB,OAAO,GAAGpB,MAAM,CAACqB,CAAE;AACzB,WAAW;EAAA,IAAC;IAAEjB;EAAa,CAAC;EAAA,OAAMA,YAAY,GAAG,OAAO,GAAG,KAAK;AAAA,CAAE;AAClE,CAAC;AAED,MAAMkB,CAAC,GAAG;EACRF;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}